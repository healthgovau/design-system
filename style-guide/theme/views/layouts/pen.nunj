{% extends "layouts/pjax.nunj" if request.isPjax else "layouts/frame.nunj" %}
{% import "macros/image.nunj" as img %}
{% import "macros/status.nunj" as status %}
{% import "macros/errors.nunj" as errors %}

{% set page = {
    title: entity.title
} %}

{% set previewUrl = path(frctl.theme.urlFromRoute('preview', {handle: entity.handle})) %}

{% block content %}

{% if frctl.env.server and frctl.env.sync %}
    {% set rendered = false %}
{% else %}
    {% set rendered = entity.render(null, renderEnv, { preview: true, collate: true }) | async(true) %}
    {% if rendered | isError %}
        {% set error = rendered %}
        {% set renderError %}{{ errors.renderError('component', error.message) }}{% endset %}
        {% set rendered = false %}
    {% endif %}
{%- endif %}

<div class="Pen" data-behaviour="pen" id="pen-{{ entity.id }}">

    {% block penContent %}

    {% include "partials/pen/header.nunj" %}

    <div class="Browser-panel Browser-notes" data-role="tab-panel" id="browser-{{ entity.id }}-panel-notes">
        <div class="Prose Prose--condensed">
            {% if entity.notes %}
            {{ frctl.docs.renderString(entity.notes, renderEnv) | async }}
            {% else %}
            <p class="Browser-isEmptyNote">There are no notes for this item.</p>
            {% endif %}
        </div>
    </div>

    <h2>Preview</h2>
    {% include "partials/pen/preview.nunj" %}

    <h2>HTML</h2>
    {% import "macros/render.nunj" as render %}
    <div class="Browser-panel Browser-code is-active" data-role="tab-panel" id="browser-{{ entity.id }}-panel-html">
        <code class="Code Code--lang-html">
            {% if not entity.isCollated or entity.isVariant or entity.variants().size == 1 %}
            <pre>{{ render.entity(entity.render(null, renderEnv, {preview: false, collate: false}) | async(true)) | trim }}</pre>
            {% else %}
            {% for variant in entity.variants().items() %}
                <pre>{{ '<span class="hljs-comment">&lt;!-- ' + variant.label + ' --&gt;</span>' }}
    {{ render.entity(variant.render(null, renderEnv, {preview: false, collate: false}) | async(true)) | trim }}

                </pre>
            {% endfor %}
            {% endif %}
        </code>
    </div>

    <h2>Twig</h2>
    <div class="Browser-panel Browser-code is-active" data-role="tab-panel" id="browser-{{ entity.id }}-panel-html">
        <code class="Code Code--lang-html">
            <pre>{{ entity.content  | highlight('twig') }}</pre>
        </code>
    </div>
    {% endblock %}
</div>


{% endblock %}
