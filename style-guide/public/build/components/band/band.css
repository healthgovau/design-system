@charset "UTF-8";
.au-body .health-band.health-band--tertiary-2 {
  background-color: #00205B;
  background: linear-gradient(to right, #00205B, #004181); }

.au-body .health-band.health-band--secondary {
  background-color: #007680;
  background: linear-gradient(to right, #055a61, #007680); }

.au-body .health-band.health-band--primary {
  background-color: #004693;
  background: linear-gradient(to right, #004693, #16477d); }

.au-body .health-band.health-band--tertiary {
  background-color: #005fa0;
  background: linear-gradient(to left, #005fa0, #185b88); }

.au-body .health-band.health-band--neutral-1 {
  background-color: #ececec;
  background: linear-gradient(to right, #ececec, #f9f9f9); }

.au-body .health-band.health-band--neutral-2 {
  background-color: #f9f9f9;
  background: linear-gradient(to right, #f9f9f9, #ececec); }

/*! @gov.au/core v3.4.2 */
/**
 * AU-replace - Replace a string with a string
 * http://codepen.io/jakob-e/pen/doMoML
 *
 * @author @eriksen_dk <https://twitter.com/eriksen_dk>
 *
 * @param  {string} $string  - The haystack string to be manipulated
 * @param  {string} $search  - The needle to be replace
 * @param  {string} $replace - The replacement
 *
 * @return {string}          - The manipulated string with replaced values
 */
/**
 * AU-svguri - Generate an optimized SVG data-uri
 * https://codepen.io/tigt/post/optimizing-svgs-in-data-uris
 * http://codepen.io/jakob-e/pen/doMoML
 *
 * @author @eriksen_dk <https://twitter.com/eriksen_dk>
 *
 * @param  {string} $svg - The SVG to be converted
 *
 * @return {string}      - An optimized data-uri
 */
/**
 * AU-factorial - Returns the factorial of a non-negative integer.
 * https://github.com/terkel/mathsass
 *
 * @author Pascal Duez @pascalduez <http://pascalduez.me/>
 *
 * @param  {integer} $number - A non-negative integer.
 *
 * @return {integer}         - The factorial log
 */
/**
 * AU-pow - Returns base to the exponent power.
 * https://github.com/terkel/mathsass
 *
 * @author Pascal Duez @pascalduez <http://pascalduez.me/>
 *
 * @param  {integers} $base     - The base number
 * @param  {integers} $exponent - The exponent to which to raise base
 *
 * @return {integers}           - The result of the math
 */
/**
 * AU-color-luminance - Calculate color luminance
 *
 * https://github.com/voxpelli/sass-color-helpers/blob/master/stylesheets/color-helpers/_contrast.scss
 * Adapted from: https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/color.js
 * Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
 *
 * @author Pelle Wessman @voxpelli <http://kodfabrik.se/>
 *
 * @param  {string} $color - The color to calculate the luminance from
 *
 * @return {float}          - The luminance
 */
/**
 * AU-color-contrast - Get the contrast ratio of two colors and warn when it is below WCAG 2.0 AA standard 4.5:1
 *
 * https://github.com/voxpelli/sass-color-helpers/blob/master/stylesheets/color-helpers/_contrast.scss
 * Adapted from: https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/color.js
 * Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
 *
 * @author Pelle Wessman @voxpelli <http://kodfabrik.se/>
 *
 * @param  {string}   $foreground - Color one
 * @param  {string}   $background - Color two
 * @param  {boolean}  $silent     - If the logs get printed in the terminal
 * @param  {boolean}  $rounded    - If the value is rounded or not
 *
 * @return {integer}              - The contrast ratio
 */
/**
 * AU-color-a11y - The function to find the nearest accessible color
 *
 * https://github.com/alex-page/sass-a11ycolor
 *
 * @author Alex Page @aalexpaage <http://alexpage.com.au>
 *
 * @param  {Color}           $toMakeA11y           - The color that is to be changed
 * @param  {Color}           $background           - The background color to compare against toMakeA11y for the contrast
 * @param  {'small'|'large'} $ratioKey   ['small'] - The keyword 'small' or 'large' to set the WCAG 2.1 contrast ration or 3.0 or 4.5
 * @param  {Number}          $steps      [0.1]     - The step size our function is searching for a new color in. The bigger the number the faster the process
 *                                                    the rougher the found color.
 *
 * @return {Color}                                 - Returns the nearest accessible color
 */
/**
 * AU-color-lowest-contrast - Find the lowest contrast color
 *
 * @param  {Colors}          $colors     - The color to find the lowest contrast
 * @param  {Color}           $background - The background color to compare the colors against
 *
 * @return {Color}                       - Returns the lowest contrast color
 */
/**
 * AU-space - Mixin for setting a properties value to snap to the grid, with a fallback for REM.
 *
 * @param  {string} $property - The css property to apply the spacing ( padding, margin )
 * @param  {number} $values   - The values of the property ( 0, 20px, 1unit, 5% )
 *
 * @return {number}           - The space in px and rems
 */
/**
 * AU-clearfix - Clearing floats
 */
/**
 * AU-media - Create media queries and wraps the @content code inside of it
 *
 * @param  {keywords} $breakpoint - Either one of the following keywords: xs, sm, md, lg
 *
 * @return {string}               - The code passed in via @content wrapped inside a media query
 */
/**
 * AU-sronly - Hide an element from the screen but not a screen reader
 */
/**
 * AU-outline - Create outline based on the theme the user is using.
 *
 * @param  {keywords} $theme - `dark` or default ( `light` )
 *
 * @return {string}          - The code
 */
/**
 * AU-focus - Add the outline to focus
 */
/**
 * AU-fontgrid Mixin for setting font-size and line-height that snaps to the grid.
 *
 * @param  {keywords} $fontsize-key   -  Either one of the following keywords: xs, sm, md, lg, xl, xxl, xxxl
 * @param  {keywords} $lineheight-key -  Either one of the following keywords: heading, nospace, default
 *
 * @return {string}                   - The code; fontsize in REM, with PX fallback, and unitless line-height which matches vertical grid
*/
/**
 * AU-pixelfallback enable pixel fallbacks
 */
/**
 * AU-media Breakpoints
 */
/**
 * AU-rem value used for REM calculation
 */
/**
 * AU-unit used for all type and grid calculations
 */
/**
 * AU-font stack
 * AU-font-monospace stack
 */
/**
 * AU-fontsize-map
 *
 * Predetermined pixel sizes from a 1.25 typescale rounded to the nearest $AU-unit (vertical grid)
 */
/**
 * AU-lineheight-map
 *
 * Predetermined lineheight mapped to keyword
 */
/**
 * AU-maxwidth for line lengths (the ‘measure’)
 */
/**
 * Colors light theme
 */
/**
 * Colors dark theme
 */
/**
 * Colors system messages
 */
/**
 * AU-border-radius styles
 */
.au-body .health-band {
  padding-top: 20px;
  padding-top: 1.25rem;
  padding-bottom: 20px;
  padding-bottom: 1.25rem; }
  .au-body .health-band:before, .au-body .health-band:after {
    content: " ";
    display: table; }
  .au-body .health-band:after {
    clear: both; }
  @media (min-width: 992px) {
    .au-body .health-band {
      padding-top: 40px;
      padding-top: 2.5rem;
      padding-bottom: 40px;
      padding-bottom: 2.5rem; } }
  .au-body .health-band.health-band--secondary .health-band__title--light {
    color: #99d4de; }

.health-band__image--image-text-horizontal {
  display: none; }
  @media (min-width: 768px) {
    .health-band__image--image-text-horizontal {
      display: inline-block;
      width: 70%; } }
