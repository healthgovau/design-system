"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");var _excluded=["as","dark","block","number","status","width","type","className"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * DEFAULT
 * The AUtextInput component
 *
 * @param  {string}  as               - The kind of input, can be either 'input' or 'textarea', default: 'input'
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} block            - Add the block variation class, optional
 * @param  {boolean} number           - Add the number variation class, optional
 * @param  {string}  status           - Mark this field as either 'valid' or 'invalid', optional
 * @param  {string}  type             - The type of the field, optional, default: text
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUtextInput=function AUtextInput(_ref){var as=_ref.as,dark=_ref.dark,block=_ref.block,number=_ref.number,status=_ref.status,width=_ref.width,_ref$type=_ref.type,type=_ref$type===void 0?"text":_ref$type,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,_excluded);return as==="textarea"?/*#__PURE__*/_react["default"].createElement("textarea",_extends({className:"au-text-input ".concat(className)+"".concat(block?" au-text-input--block":"")+"".concat(dark?" au-text-input--dark":"")+"".concat(number?" au-text-input--number":"")+"".concat(status==="valid"?" au-text-input--valid":"")+"".concat(status==="invalid"?" au-text-input--invalid":"")+"".concat(width?" au-text-input--width-"+width:"")},attributeOptions)):/*#__PURE__*/_react["default"].createElement("input",_extends({className:"au-text-input ".concat(className)+"".concat(dark?" au-text-input--dark":"")+"".concat(block?" au-text-input--block":"")+"".concat(number?" au-text-input--number":"")+"".concat(status==="valid"?" au-text-input--valid":"")+"".concat(status==="invalid"?" au-text-input--invalid":"")+"".concat(width?" au-text-input--width-"+width:""),type:type},attributeOptions))};AUtextInput.propTypes={as:_propTypes["default"].oneOf(["input","textarea"]),dark:_propTypes["default"].bool,block:_propTypes["default"].bool,number:_propTypes["default"].bool,status:_propTypes["default"].oneOf(["valid","invalid"]),className:_propTypes["default"].string,width:_propTypes["default"].oneOf(["xs","sm","md","lg","xl"])};AUtextInput.defaultProps={as:"input"};var _default=AUtextInput;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVXRleHRJbnB1dCIsImFzIiwiZGFyayIsImJsb2NrIiwibnVtYmVyIiwic3RhdHVzIiwid2lkdGgiLCJ0eXBlIiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9uZU9mIiwiYm9vbCIsInN0cmluZyIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6ImdHQVNBLG9EQUNBLDZEQU1BLDZCLDZuQ0FHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLEdBQU1BLENBQUFBLFdBQVcsQ0FBRyxRQUFkQSxDQUFBQSxXQUFjLFVBQUdDLENBQUFBLEVBQUgsTUFBR0EsRUFBSCxDQUFPQyxJQUFQLE1BQU9BLElBQVAsQ0FBYUMsS0FBYixNQUFhQSxLQUFiLENBQW9CQyxNQUFwQixNQUFvQkEsTUFBcEIsQ0FBNEJDLE1BQTVCLE1BQTRCQSxNQUE1QixDQUFvQ0MsS0FBcEMsTUFBb0NBLEtBQXBDLGdCQUEyQ0MsSUFBM0MsQ0FBMkNBLElBQTNDLG9CQUFrRCxNQUFsRCwrQkFBMERDLFNBQTFELENBQTBEQSxTQUExRCx5QkFBc0UsRUFBdEUsZ0JBQTZFQyxnQkFBN0UsZ0RBQ25CUixDQUFBQSxFQUFFLEdBQUssVUFBUCxjQUNHLHFEQUNBLFNBQVMsQ0FDUix3QkFBa0JPLFNBQWxCLFlBQ0lMLEtBQUssQ0FBRyx1QkFBSCxDQUE2QixFQUR0QyxZQUVJRCxJQUFJLENBQUcsc0JBQUgsQ0FBNEIsRUFGcEMsWUFHSUUsTUFBTSxDQUFHLHdCQUFILENBQThCLEVBSHhDLFlBSUlDLE1BQU0sR0FBSyxPQUFYLENBQXFCLHVCQUFyQixDQUErQyxFQUpuRCxZQUtJQSxNQUFNLEdBQUssU0FBWCxDQUF1Qix5QkFBdkIsQ0FBbUQsRUFMdkQsWUFNSUMsS0FBSyxDQUFHLHlCQUEyQkEsS0FBOUIsQ0FBc0MsRUFOL0MsQ0FGRCxFQVVLRyxnQkFWTCxFQURILGNBYUcsa0RBQU8sU0FBUyxDQUNmLHdCQUFrQkQsU0FBbEIsWUFDSU4sSUFBSSxDQUFHLHNCQUFILENBQTRCLEVBRHBDLFlBRUlDLEtBQUssQ0FBRyx1QkFBSCxDQUE2QixFQUZ0QyxZQUdJQyxNQUFNLENBQUcsd0JBQUgsQ0FBOEIsRUFIeEMsWUFJSUMsTUFBTSxHQUFLLE9BQVgsQ0FBcUIsdUJBQXJCLENBQStDLEVBSm5ELFlBS0lBLE1BQU0sR0FBSyxTQUFYLENBQXVCLHlCQUF2QixDQUFtRCxFQUx2RCxZQU1JQyxLQUFLLENBQUcseUJBQTJCQSxLQUE5QixDQUFzQyxFQU4vQyxDQURELENBU0EsSUFBSSxDQUFHQyxJQVRQLEVBU21CRSxnQkFUbkIsRUFkZ0IsQ0FBcEIsQ0EyQkFULFdBQVcsQ0FBQ1UsU0FBWixDQUF3QixDQUN2QlQsRUFBRSxDQUFFVSxzQkFBVUMsS0FBVixDQUFnQixDQUFFLE9BQUYsQ0FBVyxVQUFYLENBQWhCLENBRG1CLENBRXZCVixJQUFJLENBQUVTLHNCQUFVRSxJQUZPLENBR3ZCVixLQUFLLENBQUVRLHNCQUFVRSxJQUhNLENBSXZCVCxNQUFNLENBQUVPLHNCQUFVRSxJQUpLLENBS3ZCUixNQUFNLENBQUVNLHNCQUFVQyxLQUFWLENBQWdCLENBQUUsT0FBRixDQUFXLFNBQVgsQ0FBaEIsQ0FMZSxDQU12QkosU0FBUyxDQUFFRyxzQkFBVUcsTUFORSxDQU92QlIsS0FBSyxDQUFFSyxzQkFBVUMsS0FBVixDQUFnQixDQUFFLElBQUYsQ0FBUSxJQUFSLENBQWMsSUFBZCxDQUFvQixJQUFwQixDQUEwQixJQUExQixDQUFoQixDQVBnQixDQUF4QixDQVVBWixXQUFXLENBQUNlLFlBQVosQ0FBMkIsQ0FDMUJkLEVBQUUsQ0FBRSxPQURzQixDQUEzQixDLGFBSWVELFciLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGdvbGQuYXUvdGV4dC1pbnB1dHMgdjMuMC4wICovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKlxuICogdGV4dC1pbnB1dCBmdW5jdGlvblxuICpcbiAqIFRleHQgaW5wdXRzIGluY2x1ZGUgdGV4dCBpbnB1dHMsIGxhYmVscywgaGludHMgYW5kIHRleHRhcmVhcy4gVGhleSBhbGxvdyB1c2VycyB0byBpbnB1dCBkYXRhIGludG8gYSBmaWVsZC5cbiAqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5cbi8vIFRoZSBmb2xsb3dpbmcgbGluZSB3aWxsIGJlIHJlcGxhY2VkIGF1dG9tYXRpY2FsbHkgd2l0aCBnZW5lcmljIGltcG9ydHMgZm9yIHRoZSBFUzUgcGlwZWxpbmUuXG4vLyBZb3UgY2FuIHNhZmVseSBpZ25vcmUgdGhpcyBiaXQgaWYgeW91IHVzZSB0aGlzIG1vZHVsZSB3aXRoIHBhbmNha2Vcbi8vXG5pbXBvcnQgJy4uL2Nzcy9zdHlsZXMuY3NzJztcblxuXG4vKipcbiAqIERFRkFVTFRcbiAqIFRoZSBBVXRleHRJbnB1dCBjb21wb25lbnRcbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBhcyAgICAgICAgICAgICAgIC0gVGhlIGtpbmQgb2YgaW5wdXQsIGNhbiBiZSBlaXRoZXIgJ2lucHV0JyBvciAndGV4dGFyZWEnLCBkZWZhdWx0OiAnaW5wdXQnXG4gKiBAcGFyYW0gIHtib29sZWFufSBkYXJrICAgICAgICAgICAgIC0gQWRkIHRoZSBkYXJrIHZhcmlhdGlvbiBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge2Jvb2xlYW59IGJsb2NrICAgICAgICAgICAgLSBBZGQgdGhlIGJsb2NrIHZhcmlhdGlvbiBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge2Jvb2xlYW59IG51bWJlciAgICAgICAgICAgLSBBZGQgdGhlIG51bWJlciB2YXJpYXRpb24gY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdGF0dXMgICAgICAgICAgIC0gTWFyayB0aGlzIGZpZWxkIGFzIGVpdGhlciAndmFsaWQnIG9yICdpbnZhbGlkJywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge3N0cmluZ30gIHR5cGUgICAgICAgICAgICAgLSBUaGUgdHlwZSBvZiB0aGUgZmllbGQsIG9wdGlvbmFsLCBkZWZhdWx0OiB0ZXh0XG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVV0ZXh0SW5wdXQgPSAoeyBhcywgZGFyaywgYmxvY2ssIG51bWJlciwgc3RhdHVzLCB3aWR0aCwgdHlwZSA9ICd0ZXh0JywgY2xhc3NOYW1lID0gJycsIC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSkgPT4gKFxuXHRhcyA9PT0gJ3RleHRhcmVhJ1xuXHRcdD8gPHRleHRhcmVhXG5cdFx0XHRcdGNsYXNzTmFtZT17XG5cdFx0XHRcdFx0YGF1LXRleHQtaW5wdXQgJHsgY2xhc3NOYW1lIH1gICtcblx0XHRcdFx0XHRgJHsgYmxvY2sgPyAnIGF1LXRleHQtaW5wdXQtLWJsb2NrJyA6ICcnIH1gICtcblx0XHRcdFx0XHRgJHsgZGFyayA/ICcgYXUtdGV4dC1pbnB1dC0tZGFyaycgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IG51bWJlciA/ICcgYXUtdGV4dC1pbnB1dC0tbnVtYmVyJyA6ICcnIH1gICtcblx0XHRcdFx0XHRgJHsgc3RhdHVzID09PSAndmFsaWQnID8gJyBhdS10ZXh0LWlucHV0LS12YWxpZCcgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IHN0YXR1cyA9PT0gJ2ludmFsaWQnID8gJyBhdS10ZXh0LWlucHV0LS1pbnZhbGlkJyA6ICcnIH1gICsgXG5cdFx0XHRcdFx0YCR7IHdpZHRoID8gJyBhdS10ZXh0LWlucHV0LS13aWR0aC0nICsgd2lkdGggOiAnJyB9YFx0XHRcdFx0XHRcblx0XHRcdFx0fVxuXHRcdFx0XHR7IC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSA+XG5cdFx0XHQ8L3RleHRhcmVhPlxuXHRcdDogPGlucHV0IGNsYXNzTmFtZT17XG5cdFx0XHRcdFx0YGF1LXRleHQtaW5wdXQgJHsgY2xhc3NOYW1lIH1gICtcblx0XHRcdFx0XHRgJHsgZGFyayA/ICcgYXUtdGV4dC1pbnB1dC0tZGFyaycgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IGJsb2NrID8gJyBhdS10ZXh0LWlucHV0LS1ibG9jaycgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IG51bWJlciA/ICcgYXUtdGV4dC1pbnB1dC0tbnVtYmVyJyA6ICcnIH1gICtcblx0XHRcdFx0XHRgJHsgc3RhdHVzID09PSAndmFsaWQnID8gJyBhdS10ZXh0LWlucHV0LS12YWxpZCcgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IHN0YXR1cyA9PT0gJ2ludmFsaWQnID8gJyBhdS10ZXh0LWlucHV0LS1pbnZhbGlkJyA6ICcnIH1gICtcblx0XHRcdFx0XHRgJHsgd2lkdGggPyAnIGF1LXRleHQtaW5wdXQtLXdpZHRoLScgKyB3aWR0aCA6ICcnIH1gXG5cdFx0XHRcdH1cblx0XHRcdFx0dHlwZT17IHR5cGUgfSB7IC4uLmF0dHJpYnV0ZU9wdGlvbnMgfVxuXHRcdFx0Lz5cbik7XG5cbkFVdGV4dElucHV0LnByb3BUeXBlcyA9IHtcblx0YXM6IFByb3BUeXBlcy5vbmVPZihbICdpbnB1dCcsICd0ZXh0YXJlYScgXSksXG5cdGRhcms6IFByb3BUeXBlcy5ib29sLFxuXHRibG9jazogUHJvcFR5cGVzLmJvb2wsXG5cdG51bWJlcjogUHJvcFR5cGVzLmJvb2wsXG5cdHN0YXR1czogUHJvcFR5cGVzLm9uZU9mKFsgJ3ZhbGlkJywgJ2ludmFsaWQnIF0pLFxuXHRjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cdHdpZHRoOiBQcm9wVHlwZXMub25lT2YoWyAneHMnLCAnc20nLCAnbWQnLCAnbGcnLCAneGwnIF0pXG59O1xuXG5BVXRleHRJbnB1dC5kZWZhdWx0UHJvcHMgPSB7XG5cdGFzOiAnaW5wdXQnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQVV0ZXh0SW5wdXQ7XG4iXX0=