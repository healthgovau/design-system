"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=exports.AUheaderBrand=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");var _excluded=["title","level","subline","brandImage","brandImageAlt","link","children","className","linkComponent"],_excluded2=["hero","dark","alt","children","className"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * The header brand component
 *
 * @param  {string}   title            - The title of the header
 * @param  {string}   level            - The tag level (<h1/> <h2/> etc), default: '1'
 * @param  {string}   subline          - An optional subline, optional
 * @param  {string}   brandImage       - An optional brand image, optional
 * @param  {string}   brandImageAlt    - Brand image alt tag
 * @param  {string}   link             - An optional link for the header brand, optional
 * @param  {node}     children         - The inside of this section
 * @param  {string}   className        - An additional class, optional
 * @param  {object}   attributeOptions - Any other attribute options
 */var AUheaderBrand=function AUheaderBrand(_ref){var title=_ref.title,level=_ref.level,subline=_ref.subline,brandImage=_ref.brandImage,brandImageAlt=_ref.brandImageAlt,link=_ref.link,children=_ref.children,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,linkComponent=_ref.linkComponent,attributeOptions=_objectWithoutProperties(_ref,_excluded);var HeadingTag="h".concat(level);var LinkComponent=link?linkComponent:"div";if(link){// If we are using a normal link
if(LinkComponent==="a"){attributeOptions.href=link}// If we are using a link component
else if(typeof LinkComponent==="function"){attributeOptions.to=link}}var brand=brandImage?/*#__PURE__*/_react["default"].createElement("img",{className:"au-header__brand-image",alt:brandImageAlt,src:brandImage}):null;return/*#__PURE__*/_react["default"].createElement(LinkComponent,_extends({className:"au-header__brand ".concat(className)},attributeOptions),brand,title||subline?/*#__PURE__*/_react["default"].createElement("div",{className:"au-header__text"},title?/*#__PURE__*/_react["default"].createElement(HeadingTag,{className:"au-header__heading",children:title}):null,subline?/*#__PURE__*/_react["default"].createElement("div",{className:"au-header__subline",children:subline}):null,children):"")};exports.AUheaderBrand=AUheaderBrand;AUheaderBrand.propTypes={title:_propTypes["default"].node,level:_propTypes["default"].oneOf(["1","2","3","4","5","6"]),subline:_propTypes["default"].node,link:_propTypes["default"].string,brandImage:_propTypes["default"].string,brandImageAlt:_propTypes["default"].string,children:_propTypes["default"].node,className:_propTypes["default"].string,linkComponent:_propTypes["default"].oneOfType([_propTypes["default"].string,_propTypes["default"].func])};AUheaderBrand.defaultProps={level:"1",brandImageAlt:"Australian Government Crest",linkComponent:"a"};/**
 * DEFAULT
 * The header component
 *
 * @param  {boolean}  hero             - The hero option, optional
 * @param  {boolean}  dark             - Add the dark variation class, optional
 * @param  {boolean}  alt              - Add the alt variation class, optional
 * @param  {node}     children         - The inside of this section
 * @param  {string}   className        - An additional class, optional
 * @param  {object}   attributeOptions - Any other attribute options
 */var AUheader=function AUheader(_ref2){var hero=_ref2.hero,dark=_ref2.dark,alt=_ref2.alt,children=_ref2.children,_ref2$className=_ref2.className,className=_ref2$className===void 0?"":_ref2$className,attributeOptions=_objectWithoutProperties(_ref2,_excluded2);return/*#__PURE__*/_react["default"].createElement("div",_extends({className:"au-header ".concat(className).concat(hero?" au-header--hero":"").concat(dark?" au-header--dark":"").concat(alt?" au-header--alt":""),role:"banner"},attributeOptions),children)};AUheader.propTypes={hero:_propTypes["default"].bool,dark:_propTypes["default"].bool,alt:_propTypes["default"].bool,children:_propTypes["default"].node,className:_propTypes["default"].string};var _default=AUheader;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,