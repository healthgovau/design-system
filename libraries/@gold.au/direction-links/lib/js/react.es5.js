"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");var _excluded=["linkComponent","dark","link","text","direction","className"];function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * All direction options
 *
 * @type {Object}
 */var directions={up:"au-direction-link__arrow--up",right:"au-direction-link__arrow--right",down:"au-direction-link__arrow--down",left:"au-direction-link__arrow--left"};/**
 * DEFAULT
 * The direction-links component
 *
 * @param  {string}  linkComponent    - The component used for the link
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {string}  link             - The link target, optional
 * @param  {string}  text             - The text of the CTA link
 * @param  {string}  direction        - The direction for the arrow; can be either: up right down left, default: 'right'
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUdirectionLink=function AUdirectionLink(_ref){var linkComponent=_ref.linkComponent,dark=_ref.dark,link=_ref.link,text=_ref.text,direction=_ref.direction,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,_excluded);var LinkComponent=linkComponent;if(link){// If we are using a normal link
if(LinkComponent==="a"){attributeOptions.href=link}// If we are using a link component
else if(typeof LinkComponent==="function"){attributeOptions.to=link}return/*#__PURE__*/_react["default"].createElement(LinkComponent,_extends({className:"au-direction-link ".concat(className," ").concat(dark?" au-direction-link--dark":"")},attributeOptions),/*#__PURE__*/_react["default"].createElement(AUdirectionLinkInner,{direction:direction,text:text}))}else{return/*#__PURE__*/_react["default"].createElement("button",_extends({className:"au-direction-link ".concat(className," ").concat(dark?" au-direction-link--dark":"")},attributeOptions),/*#__PURE__*/_react["default"].createElement(AUdirectionLinkInner,{direction:direction,text:text}))}};AUdirectionLink.propTypes={dark:_propTypes["default"].bool,link:_propTypes["default"].string,text:_propTypes["default"].string.isRequired,direction:_propTypes["default"].oneOf(["up","right","down","left"]).isRequired,className:_propTypes["default"].string,linkComponent:_propTypes["default"].oneOfType([_propTypes["default"].string,_propTypes["default"].func])};AUdirectionLink.defaultProps={direction:"right",linkComponent:"a"};/**
 * The inner contents of the direction link. Includes the text and and the arrow.
 * @param  {string}  text             - The text of the direction link
 * @param  {string}  direction        - The direction for the arrow; can be either: up right down left, default: 'right'
 */var AUdirectionLinkInner=function AUdirectionLinkInner(_ref2){var direction=_ref2.direction,text=_ref2.text;if(direction==="left"){return/*#__PURE__*/_react["default"].createElement(_react["default"].Fragment,null,/*#__PURE__*/_react["default"].createElement("span",{className:"au-direction-link__arrow ".concat(directions[direction]," "),"aria-hidden":"true"}),text)}else{return/*#__PURE__*/_react["default"].createElement(_react["default"].Fragment,null,text," ",/*#__PURE__*/_react["default"].createElement("span",{className:"au-direction-link__arrow ".concat(directions[direction]," "),"aria-hidden":"true"}))}};AUdirectionLinkInner.propTypes={direction:_propTypes["default"].oneOf(["up","down","left","right"]).isRequired,text:_propTypes["default"].string.isRequired};AUdirectionLinkInner.defaultProps={};var _default=AUdirectionLink;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,